#include <SFML/Graphics.hpp>
#include <SFML/Audio.hpp>

int main() {
    // Create the game window
    sf::RenderWindow window(sf::VideoMode(800, 600), "Pong Game");

    // Create paddles and ball
    sf::RectangleShape paddle1(sf::Vector2f(20, 100));
    sf::RectangleShape paddle2(sf::Vector2f(20, 100));
    sf::CircleShape ball(15);

    // Position paddles and ball
    paddle1.setPosition(20, 250);
    paddle2.setPosition(760, 250);
    ball.setPosition(400, 300);

    // Set initial ball speed
    float ballSpeedX = 4.0f;
    float ballSpeedY = 4.0f;

    // Create a font for displaying scores
    sf::Font font;
    font.loadFromFile("arial.ttf");

    // Create text objects for displaying scores
    sf::Text player1Score;
    sf::Text player2Score;
    player1Score.setFont(font);
    player2Score.setFont(font);
    player1Score.setCharacterSize(30);
    player2Score.setCharacterSize(30);
    player1Score.setFillColor(sf::Color::White);
    player2Score.setFillColor(sf::Color::White);
    player1Score.setPosition(100, 10);
    player2Score.setPosition(680, 10);

    int score1 = 0;
    int score2 = 0;

    // Main game loop
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
        }

        // Move paddles
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::W) && paddle1.getPosition().y > 0) {
            paddle1.move(0, -5);
        }
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::S) && paddle1.getPosition().y + paddle1.getSize().y < 600) {
            paddle1.move(0, 5);
        }
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up) && paddle2.getPosition().y > 0) {
            paddle2.move(0, -5);
        }
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Down) && paddle2.getPosition().y + paddle2.getSize().y < 600) {
            paddle2.move(0, 5);
        }

        // Move the ball
        ball.move(ballSpeedX, ballSpeedY);

        // Ball collisions with top and bottom of the window
        if (ball.getPosition().y < 0 || ball.getPosition().y + ball.getRadius() * 2 > 600) {
            ballSpeedY = -ballSpeedY;
        }

        // Ball collisions with paddles
        if (ball.getGlobalBounds().intersects(paddle1.getGlobalBounds()) ||
            ball.getGlobalBounds().intersects(paddle2.getGlobalBounds())) {
            ballSpeedX = -ballSpeedX;
        }

        // Scoring
        if (ball.getPosition().x < 0) {
            score2++;
            ball.setPosition(400, 300);
            ballSpeedX = 4.0f;
            ballSpeedY = 4.0f;
        }
        if (ball.getPosition().x + ball.getRadius() * 2 > 800) {
            score1++;
            ball.setPosition(400, 300);
            ballSpeedX = -4.0f;
            ballSpeedY = 4.0f;
        }

        player1Score.setString("Player 1: " + std::to_string(score1));
        player2Score.setString("Player 2: " + std::to_string(score2));

        // Clear the window
        window.clear();

        // Draw paddles and ball
        window.draw(paddle1);
        window.draw(paddle2);
        window.draw(ball);

        // Draw scores
        window.draw(player1Score);
        window.draw(player2Score);

        // Display the window
        window.display();
    }

    return 0;
}
